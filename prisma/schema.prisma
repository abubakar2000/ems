// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Taxes {
  name       String @id
  rate       Float? @default(0)
  percentage Float  @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Quotation {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  clientName         String
  complaintNumber    String
  branchName         String
  title              String
  description        String
  // total purchase rate = sum of all purchasePricePerUnit * quantity
  // total sale rate = sum of all salePricePerUnit * quantity
  // total sale tax = sum of all total sale tax
  // total sale amount = total sale rate + total sale tax
  // total profit = total sale amount - total purchase rate
  // profit percentage = (total profit / total sale amount) * 100
  quotationLineItems QuotationLineItem[]
}

model QuotationLineItem {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  title       String
  description String
  quantity    Int
  unit        String

  purchasePricePerUnit Float
  // purchase rate total =  purchasePricePerUnit * quantity
  salePricePerUnit     Float
  saleTaxRate          Float?     @default(0.0)
  // sale rate total = salePricePerUnit * quantity
  // unit sale tax = salePricePerUnit * saleTaxRate (13%)
  // total sale tax = unit sale tax * quantity
  quotation            Quotation? @relation(fields: [quotationId], references: [id])
  quotationId          String?
}
